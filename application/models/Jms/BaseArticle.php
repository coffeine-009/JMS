<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Jms_Article', 'doctrine');

/**
 * Jms_BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_user
 * @property integer $id_journal_number
 * @property string $code_language
 * @property integer $pageno
 * @property timestamp $creation
 * @property Jms_User $User
 * @property Doctrine_Collection $ArticleAuthors
 * @property Doctrine_Collection $ArticleLanguage
 * @property Doctrine_Collection $Recension
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Jms_BaseArticle extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_user', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_journal_number', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('code_language', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('pageno', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('creation', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Jms_User as User', array(
             'local' => 'id_user',
             'foreign' => 'id'));

        $this->hasMany('Jms_ArticleAuthors as ArticleAuthors', array(
             'local' => 'id',
             'foreign' => 'id_article'));

        $this->hasMany('Jms_ArticleLanguage as ArticleLanguage', array(
             'local' => 'id',
             'foreign' => 'id'));

        $this->hasMany('Jms_Recension as Recension', array(
             'local' => 'id',
             'foreign' => 'id_article'));
        
        //- No keys -////TODO: TMP
        $this->hasMany('Jms_JournalNumber as JournalNumber', array(
             'local' => 'id_journal_number',
             'foreign' => 'id'));
    }
}